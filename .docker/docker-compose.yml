version: "3.9"

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - "3000:3000"
    networks:
      - app_network
  api:
    container_name: api
    build:
      context: ../apps/server
      dockerfile: ../apps/server/Dockerfile
      target: development
    restart: always
    ports:
      - "3002:3002"
      - "9229:9229"
    env_file:
      - ../apps/server/.env
    depends_on:
      - postgres
      - pgadmin
    networks:
      - app_network
  postgres:
    container_name: postgres_container
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-bookstore}
      PGDATA: /Users/admin/Developer/docker/volumes/postgres
    volumes:
      - ./postgres-data:/.docker/volumes/postgres
    env_file:
      - ../apps/server/.env
    ports:
      - "5432:5432"
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
networks:
  app_network:
    external: true
  postgres:
    driver: bridge

